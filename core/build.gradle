plugins {
    id 'org.springframework.boot' version '2.6.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

group 'ru.keepupproject'
version '2.0.0'
description = 'keepup-core'

java {
    withJavadocJar()
    withSourcesJar()
}

bootJar.enabled = false
jar.enabled = true

publishing {
    repositories {
        maven {
            name = 'sonatypeStaging'
            credentials {
                username project.properties["mavenCentralUsername"].toString()
                password project.properties["mavenCentralPassword"].toString()
            }
            url = uri("https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/")
        }

        maven {
            name = 'sonatypeReleases'
            credentials {
                username project.properties["mavenCentralUsername"].toString()
                password project.properties["mavenCentralPassword"].toString()
            }
            url = uri("https://s01.oss.sonatype.org/content/repositories/releases/")
        }

    }


    publications {
        core(MavenPublication) {
            groupId 'ru.keepupproject'
            artifactId 'keepup-core'
            version '2.0.0'
            // todo afterEvaluate
            artifact 'build/libs/core-2.0.0-plain.jar'
            from components.java
            pom {
                name = 'KeepUP Core'
                description = 'Main module of KeepUP library for building CMS applications'
                url = 'https://keepupproject.ru'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }
                developers {
                    developer {
                        id = 'fedorsergeev'
                        name = 'Fedor Sergeev'
                        email = 'fksergeev@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/FedorSergeev/keepup.git'
                    developerConnection = 'scm:git:https://github.com/FedorSergeev/keepup.git'
                    url = 'https://github.com/FedorSergeev/keepup.git'
                }
            }
        }
    }
    signing {
        sign publishing.publications.core
    }

    javadoc {
        if (JavaVersion.current().isJava12Compatible()) {
            options.addBooleanOption('html5', true)
        }
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "FedorSergeev_keepup"
        property "sonar.organization", "fedorsergeev"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.sources", "src/main/java"
        property "sonar.tests", "src/test/java"
        property "sonar.coverage.jacoco.xmlReportPaths", "../build/reports/jacoco.xml"
    }
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'commons-io:commons-io:2.11.0'
    implementation 'org.hibernate:hibernate-core:6.0.0.CR1'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-webflux:3.1.1'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.liquibase:liquibase-core:4.23.0'
    implementation 'io.fastjson:boon:0.34'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    implementation 'io.r2dbc:r2dbc-h2:0.8.1.RELEASE'
    implementation 'javax.persistence:javax.persistence-api:2.2'
    implementation 'commons-net:commons-net:3.9.0'

    implementation 'org.jetbrains:annotations:22.0.0'
    implementation 'javax.servlet:javax.servlet-api:4.0.1'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.junit.platform:junit-platform-runner:1.7.2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.mockftpserver:MockFtpServer:2.8.0'
    testImplementation 'it.ozimov:embedded-redis:0.7.3'
    testImplementation 'com.github.fppt:jedis-mock:0.1.22'
    testImplementation 'org.testcontainers:postgresql:1.16.3'
    testImplementation 'org.testcontainers:junit-jupiter:1.16.3'
    testImplementation 'org.testcontainers:r2dbc:1.16.3'
    testImplementation 'org.postgresql:postgresql:42.3.1'
    testImplementation 'io.r2dbc:r2dbc-postgresql:0.8.11.RELEASE'

    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    testRuntimeOnly 'com.h2database:h2:1.4.200'
}

configurations {
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
        exclude group: 'ch.qos.logback', module: 'logback-classic'
        exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
    }
}

test {
    useJUnitPlatform()
    classpath = project.sourceSets.test.runtimeClasspath + files("${projectDir}/src/test/resources/mock-keepup-app.jar")
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
}